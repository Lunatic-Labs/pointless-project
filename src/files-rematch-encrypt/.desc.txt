<style>
  .container div {
    max-width: fit-content;
    margin-left: auto;
    margin-right: auto;
    border: 2px solid #ccc;
    padding: 8px;
    border-radius: 8px;
    background-color: #331E54;
    color: rgb(255, 217, 90);
  }
  .container ul {
    margin-right: 21px;
    text-align: left;
    list-style-position: inside;
  }
  .gradient-text {
    background: linear-gradient(0deg, #0bd45f, #0fbbff, #ffd30d);
    -webkit-background-clip: text;
    background-size: 200% 200%;
    -webkit-text-fill-color: transparent;
  }
  .multi-color-text {
    background: linear-gradient(to right, red, blue);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;
  }

</style>

<p>
  You seemed to struggle on the first encryption puzzle. Because of this, we have decided to give you a freebie
  by just giving you the password for no strings attachted without encrypting it!
</p>

<div>
<p>
  <b>Unfortunately...</b>
  <ul>
    <li>We <i>accidentally</i> dropped the password into a <b class="gradient-text">goopifying</b> machine.</li>
    <li>We then took it out and <i>accidentally</i> dropped it into the <b class="multi-color-text">mashing</b> machine.</li>
    <li>And against all odds, somehow, we dropped it in the <u>‚ÜîÔ∏èüåÄ</u> machine.</li>
  </ul>
</p>
</div>

<p>The result of this series of unfortunate events has turned the password into:</p>
<h3><div id="password"></div></h3>

We don't know how to <span style="color: #ff0000">undo</span> it
nor do we know how they work. All we have are the magic machines that encrypted the password.

<p><b>What is the decrypted password?</p></p>

<br />

<input type="text" id="inputBox">
<button onclick="printShifted()" class="multi-color-text">Mash</button>
<button onclick="printFibmix()">Ô∏è‚ÜîÔ∏èüåÄ</button>
<button onclick="printTableChanged()" class="gradient-text">Goopify</button>
<p></p>
<div id="output">Machine Output</div>

<script>

var abcdefghijklmnopqrstuvwxyz = %DELIM;
var key = %DELIM;

var tbl = {
%DELIM
};

function convertStrToAscii(str) {
  return str.split('').map(function(char) {
    return char.charCodeAt(0);
  }).join('.');
}

function shift(str, n) {
  let shifted = str.substring(n, str.length);
  shifted += convertStrToAscii(str.substring(0, n));
  return shifted;
}

function tableChange(s) {
  var s1 = "";
  for (let i = 0; i < s.length; i += 1) {
    let c = tbl[s[i]];
    if (c === undefined) {
      s1 += s[i];
    }
    else {
      s1 += tbl[s[i]];
    }
  }
  return s1;
}

function fib(n) {
  let prev = [0, 1];
  for (let i = 2; i <= n; i++) {
    let tmp = prev[1];
    prev[1] = prev[0] + prev[1];
    prev[0] = tmp;
  }
  return prev[1];
}

function fibmix(s) {
  let i = 0;
  let j = 1;
  let res = "";
  while (i < s.length) {
    let stride = fib(j);
    if (i+stride > s.length) {
      res = s.substring(i,s.length) + res;
      break;
    }

    res = s.substring(i,i+stride) + res;
    j += 1;
    i += stride;
  }
  return res;
}

function printShifted() {
  let userInput = document.getElementById("inputBox").value;
  let output = shift(userInput, 2);
  document.getElementById("output").innerText = userInput +" ‚ûú " + output;
}

function printTableChanged() {
  let userInput = document.getElementById("inputBox").value;
  let output = tableChange(userInput);
  document.getElementById("output").innerText = userInput +" ‚ûú " + output;
}

function printFibmix() {
  let userInput = document.getElementById("inputBox").value;
  let output = fibmix(userInput);
  document.getElementById("output").innerText = userInput +" ‚ûú " + output;
}

function encrypt() {
  let password = "";
  for (let i = 0; i < abcdefghijklmnopqrstuvwxyz.length; i += 1) {
    let char = abcdefghijklmnopqrstuvwxyz[i];
    let xord = char^key;
    password += String.fromCharCode(xord);
  }

  password = fibmix(shift(tableChange(password), 2));
  document.getElementById("password").innerText = password;
}

encrypt();

</script>
