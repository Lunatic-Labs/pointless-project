
<div style="width:50%; margin:0 auto;">

<div id="maze1" style="width:50%; margin:0 auto;">
  %DELIM
</div>

<div id="maze2" style="width:50%; margin:0 auto;">
  %DELIM
</div>

<div id="maze3" style="width:50%; margin:0 auto;">
  %DELIM
</div>

</div>

<script>
 var maze1 = [%DELIM];

 var maze2 = [%DELIM];

 var maze3 = [%DELIM];

 var mazes = [maze1, maze2, maze3];

 var idx = 0;
 var cur_maze = mazes[idx];
 var x = 0;
 var y = maze1.length - 1;
 var has_key = false;
 var has_battery = false;

 function instructions() {
    let s = `u(x), d(x), l(x) and r(x): Moves you x*2 tiles in the direction.
descend_stairs(): Descend to the next maze if you are on a brown tile.
ascend_stairs() : Ascend to the last maze if you are on a green tile.
pickup()        : Picks up an item if you are a pink tile.
exit()          : Escapes the maze if you are on the yellow tile`;

    return s;
 }

 function inventory() {
    let s = "Inventory:\n";
    if (has_key) {
        s += "  key";
    }
    if (has_battery) {
        s += "  battery";
    }
    return s;
 }

 function pickup_item() {
    if (cur_maze[y][x] === 6 && !has_key) {
        has_key = true;
        return "you picked up a key!";
    } else if (cur_maze[y][x] === 6 && has_key) {
        return "you already have the key!";
    } else if (cur_maze[y][x] === 7 && !has_battery) {
        has_battery = true;
        return "you picked up a battery!";
    } else if (cur_maze[y][x] === 7 && has_battery) {
        return "you already have the battery!";
    }
    return "you are not on an item!";
 }

 function exit() {
    if (cur_maze[y][x] === 3 && has_key && has_battery) {
        return "you win!";
    }
    else if (cur_maze[y][x] === 3 && !has_key) {
        return "the door is locked! maybe search around for a key?";
    }
    else if (cur_maze[y][x] === 3 && !has_battery) {
        return "you do not have enough power to open the door! I wonder if a battery is somewhere?";
    }
    return "you are not on the door!";
 }

 function ascend_stairs() {
    if (cur_maze[y][x] === 5) {
        prev_maze();
        return "you climbed the stairs!";
    }
    return "you are not on stairs!";
 }

 function descend_stairs() {
    if (cur_maze[y][x] === 4) {
        next_maze();
        return "you descended the stairs!";
    }
    return "you are not on stairs!";
 }

 function check_boundary(dx, dy) {
    try {
        for (var i = 0; i < dx; i++) {
            if (cur_maze[y][x + i] === 0) {
                return false;
            }
        }
        for (var i = 0; i > dx; i--) {
            if (cur_maze[y][x + i] === 0) {
                return false;
            }
        }
        for (var i = 0; i < dy; i++) {
            if (cur_maze[y + i][x] === 0) {
                return false;
            }
        }
        for (var i = 0; i > dy; i--) {
            if (cur_maze[y + i][x] === 0) {
                return false;
            }
        }
    } catch (e) {
        return false;
    }
     var newX = x + dx;
     var newY = y + dy;
     if (newX >= 0 && newX < cur_maze.length && newY >= 0 && newY < cur_maze[0].length && cur_maze[newY][newX] !== 0) {
        return true;
     } else {
        return false;
     }
 }

 function u(stride = 1) {
     if (check_boundary(0, -stride*2)) {
         y -= stride*2;
         return "you moved up";
     }
     return "you hit a wall!";
 }

 function d(stride = 1) {
     if (check_boundary(0, stride*2)) {
         y += stride*2;
         return "you moved down";
     }
     return "you hit a wall!";
 }

 function r(stride = 1) {
     if (check_boundary(stride*2, 0)) {
         x += stride*2;
         return "you moved right";
     }
     return "you hit a wall!";
 }

 function l(stride = 1) {
     if (check_boundary(-stride*2, 0)) {
         x -= stride*2;
         return "you moved left";
     }
     return "you hit a wall!";
 }

 function hide_maze(id) {
    var div = document.getElementById(id);
    div.style.display = "none";
 }

 function show_maze(id) {
    var div = document.getElementById(id);
    div.style.display = "block";
 }

 function next_maze() {
    if (idx === mazes.length - 1) {
        return "no more mazes!";
    }
    idx = idx+1;
    cur_maze = mazes[idx];
    hide_maze("maze1");
    hide_maze("maze2");
    hide_maze("maze3");
    show_maze("maze" + (idx + 1));
 }

 function prev_maze() {
    if (idx === 0) {
        return "no more mazes!";
    }
    idx = idx-1;
    cur_maze = mazes[idx];
    hide_maze("maze1");
    hide_maze("maze2");
    hide_maze("maze3");
    show_maze("maze" + (idx + 1));
 }

 hide_maze("maze2");
 hide_maze("maze3");

</script>
